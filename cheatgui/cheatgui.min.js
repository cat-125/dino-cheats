const cheatgui=(function(){const config={symbols:{expanded:'▼',collapsed:'◀',resize:'&#9698;'},minWindowWidth:150,minWindowHeight:100};const isMobile=/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.userAgent)
function $(selector,parent=document){if(typeof selector!=='string')return selector;return $(parent).querySelector(selector);}
function createElem(name){return document.createElement(name);}
function distance(x1,y1,x2,y2){const a=x1-x2;const b=y1-y2;return Math.sqrt(a*a+b*b);}
function generateId(length,_chars=''){const chars=_chars||'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';let result='';for(let i=0;i<length;i++){result+=chars[Math.floor(Math.random()*chars.length)];}
return result;}
const utils={$,createElem,generateId,distance,appendToBody(widget){document.body.appendChild(widget.getRef());},includeCSS(css){const head=document.head;const style=createElem('style');style.setAttribute('type','text/css');style.innerHTML=css;head.appendChild(style);},includeCSSLink(url){const link=createElem('link');link.rel='stylesheet';link.href=url;document.head.appendChild(link);},includeJS(url){const script=createElem('script');script.src=url;document.body.appendChild(script);},loadTheme(url){const link=$(`link#cgui-theme`,document.head)||createElem('link');link.id='cgui-theme'
link.rel='stylesheet';link.href=url;document.head.appendChild(link);},updateConfig(newConfig){function updateNestedConfig(config,newConfig){for(const[key,value]of Object.entries(newConfig)){if(typeof value==='object'&&typeof config[key]==='object'){updateNestedConfig(config[key],value);}else if(config[key]!==undefined){config[key]=value;}}}
updateNestedConfig(config,newConfig);},getConfig(){return config;}};class GUIElement{constructor(){this.ref=null;}
_init(){this.addClass('cgui');}
addClass(...classes){this.ref.classList.add(...classes);return this;}
setClass(className){this.ref.className='cgui-widget '+className.trim();return this;}
removeClass(...classes){this.ref.classList.remove(...classes);return this;}
getRef(){return this.ref;}}
class View{constructor(){this.ref=null;}
init(){this.ref=createElem('div');return this;}
mount(target){this.ref=$(target);return this;}
setContent(html){this.ref.innerHTML=html;return this;}
append(widget){this.ref.appendChild(widget.getRef());return this;}}
class Window extends GUIElement{constructor({x=0,y=0,width=100,height=100,title='',expanded=true,toggleable=true,toggleThreshold=isMobile?10:3,draggable=true,dragThreshold=isMobile?10:3,resizable=true}){super();this.ref=createElem('div');this._init();this.addClass('cgui-window');this.ref.style.position='absolute';this.ref.role='dialog';this.headerRef=createElem('div');this.headerRef.classList.add('cgui-window-header');const titleId=generateId(16);this.titleRef=createElem('span');this.titleRef.innerHTML=title;this.titleRef.id=titleId;this.titleRef.className='cgui-window-title';this.headerRef.appendChild(this.titleRef);this.setTitle(title);this.ref.setAttribute('aria-labeledby',titleId);this.headerRef.innerHTML+='&nbsp;';this.arrowRef=createElem('span');this.arrowRef.className='cgui-window-arrow';this.arrowRef.innerHTML=config.symbols.expanded;this.arrowRef.hidden=!toggleable;this.headerRef.appendChild(this.arrowRef);const contentId=generateId(16);this.contentRef=createElem('div');this.contentRef.id=contentId;this.contentRef.classList.add('cgui-window-content');this.ref.setAttribute('aria-describedby',contentId);this.resizeRef=createElem('span');this.resizeRef.className='cgui-window-resize';this.resizeRef.innerHTML=config.symbols.resize;this.resizeRef.hidden=!resizable;this.view=new View().mount(this.contentRef);this.ref.appendChild(this.headerRef);this.ref.appendChild(this.contentRef);this.ref.appendChild(this.resizeRef);this.x=x;this.y=y;this.width=width;this.height=height;this.ref.style.left=`${x}px`;this.ref.style.top=`${y}px`;this.resize(width,height);this.collapsed=!expanded;if(this.collapsed)this.collapse();document.body.appendChild(this.ref);this.isDragging=this.isResizing=false;if(draggable)this.initDraggable(dragThreshold);if(resizable)this.initResize();if(toggleable)this.initToggleOnClick(toggleThreshold);this.initActivationOnClick();}
setTitle(html){this.titleRef.innerHTML=html;return this;}
setContent(html){this.view.setContent(html);return this;}
append(widget){this.view.append(widget);return this;}
move(x,y){this.ref.style.left=`${x}px`;this.ref.style.top=`${y}px`;this.x=x;this,y=y;return this;}
setWidth(width){width=Math.max(width,config.minWindowWidth);this.width=width;this.ref.style.width=`${width}px`;return this;}
setHeight(height){height=Math.max(height,config.minWindowHeight);this.height=height;this.contentRef.style.height=`${height}px`;return this;}
resize(width,height){this.setWidth(width);this.setHeight(height);return this;}
collapse(){this.collapsed=true;this.ref.classList.add('collapsed');this.arrowRef.innerHTML=config.symbols.collapsed;return this;}
expand(){this.collapsed=false;this.ref.classList.remove('collapsed');this.arrowRef.innerHTML=config.symbols.expanded;return this;}
toggle(){if(this.collapsed){this.expand();}else{this.collapse();}
return this;}
hide(){this.ref.style.display='none';return this;}
show(){this.ref.style.display='block';return this;}
destroy(){this.ref.remove();}
sendToTop(){if(this.ref.classList.contains('active'))return;[...document.getElementsByClassName('cgui-window')].forEach(win=>win.classList.remove('active'));this.ref.classList.add('active');}
initActivationOnClick(){this.ref.addEventListener('pointerdown',()=>{this.sendToTop();});}
initToggleOnClick(threshold){let isClick=false,startX,startY;this.headerRef.addEventListener('pointerdown',e=>{isClick=true;startX=e.clientX;startY=e.clientY;});document.addEventListener('pointermove',e=>{if(distance(startX,startY,e.clientX,e.clientY)>threshold)
isClick=false;});this.headerRef.addEventListener('pointerup',()=>{if(isClick)this.toggle();});}
initDraggable(threshold){let startX,startY,offsetX,offsetY,isMouseDown=false;const startDragging=(e)=>{this.isDragging=true;this.ref.classList.add('cgui-dragging');}
const onMouseDown=(e)=>{e.preventDefault();e=e.touches?e.touches[0]:e;isMouseDown=true;startX=e.clientX;startY=e.clientY;offsetX=e.clientX-this.ref.offsetLeft;offsetY=e.clientY-this.ref.offsetTop;};const onMouseMove=(e)=>{e=e.touches?e.touches[0]:e;if(!this.isDragging){if(isMouseDown&&distance(startX,startY,e.clientX,e.clientY)>threshold&&!this.isResizing){startDragging();}
else return;}
this.move(e.clientX-offsetX,e.clientY-offsetY);};const onMouseUp=()=>{this.isDragging=isMouseDown=false;if(this.ref.classList.contains('cgui-dragging'))
this.ref.classList.remove('cgui-dragging');};this.headerRef.addEventListener('mousedown',onMouseDown);this.headerRef.addEventListener('touchstart',onMouseDown);document.addEventListener('mousemove',onMouseMove);document.addEventListener('touchmove',onMouseMove);document.addEventListener('mouseup',onMouseUp);document.addEventListener('touchend',onMouseUp);}
initResize(){let sx,sy,dx,dy,iw,ih;const onMouseDown=(e)=>{if(this.collapsed)return;e.preventDefault();e.stopPropagation();e=e.touches?e.touches[0]:e;this.isResizing=true;[sx,sy,iw,ih]=[e.clientX,e.clientY,this.width,this.height];this.addClass('cgui-resizing');};const onMouseMove=(e)=>{if(this.isResizing){e=e.touches?e.touches[0]:e;dx=e.clientX-sx;dy=e.clientY-sy;const newWidth=iw+dx;const newHeight=ih+dy;this.setWidth(newWidth);this.setHeight(newHeight);}};const onMouseUp=()=>{this.isResizing=false;this.removeClass('cgui-resizing');};this.resizeRef.addEventListener('mousedown',onMouseDown);document.addEventListener('mousemove',onMouseMove);document.addEventListener('mouseup',onMouseUp);this.resizeRef.addEventListener('touchstart',onMouseDown);document.addEventListener('touchmove',onMouseMove);document.addEventListener('touchend',onMouseUp);}
getRef(){return this.ref;}}
class Widget extends GUIElement{constructor(elementName='div'){super();this.ref=createElem(elementName);this._init();this.addClass('cgui-widget');}
setText(text){this.ref.innerHTML=text;return this;}
onClick(f){this.ref.addEventListener('click',f);return this;}}
class Text extends Widget{constructor(text=''){super('div');this.addClass('cgui-text');this.setText(text);}}
class Button extends Widget{constructor(text=''){super('button');this.addClass('cgui-btn');this.setText(text);}}
class Input extends Widget{constructor(name='',text=''){super('div');this.addClass('cgui-input-wrapper');this.inputRef=createElem('input');this.inputRef.classList.add('cgui-input');this.ref.appendChild(this.inputRef);this.nameRef=createElem('div');this.nameRef.classList.add('cgui-input-name');this.ref.appendChild(this.nameRef);this.setText(text);this.setName(name);}
setName(name){this.nameRef.innerHTML=name;return this;}
onInput(f){this.inputRef.addEventListener('input',e=>f(e,this.getText()));return this;}
setText(text){this.inputRef.value=text;return this;}
getText(){return this.inputRef.value;}}
class Switch extends Widget{constructor(text='',checked=false){super('label');const id=this.id=generateId(16);this.ref.for=id;this.addClass('cgui-switch');this.inputRef=createElem('input');this.inputRef.type='checkbox';this.inputRef.id=id;this.ref.appendChild(this.inputRef);this.inputRef.checked=checked;this.sliderRef=createElem('span');this.sliderRef.className='cgui-switch-slider';this.ref.appendChild(this.sliderRef);this.textRef=createElem('span');this.textRef.className='cgui-switch-text';this.textRef.for=id;this.ref.appendChild(this.textRef);this.ref.tabIndex=0;this.setText(text);}
onChange(func){this.inputRef.addEventListener('change',e=>func(e,this.inputRef.checked));return this;}
isChecked(){return this.inputRef.checked;}
setText(text){this.textRef.innerHTML=text;return this;}}
class Tree extends Widget{constructor(name='',expanded=false){super('div');this.addClass('cgui-tree');this.headerRef=createElem('div');this.headerRef.classList.add('cgui-tree-header');const titleId=generateId(16);this.titleRef=createElem('span');this.titleRef.innerHTML=name;this.titleRef.id=titleId;this.titleRef.className='cgui-tree-title';this.headerRef.appendChild(this.titleRef);this.headerRef.tabIndex=0;this.setTitle(name);this.headerRef.innerHTML+='&nbsp;';this.arrowRef=createElem('span');this.arrowRef.className='cgui-tree-arrow';this.arrowRef.innerHTML=config.symbols.expanded;this.headerRef.appendChild(this.arrowRef);const contentId=generateId(16);this.contentRef=createElem('div');this.contentRef.id=contentId;this.contentRef.classList.add('cgui-tree-content');this.view=new View().mount(this.contentRef);this.ref.appendChild(this.headerRef);this.ref.appendChild(this.contentRef);if(!expanded)this.collapse();this.initToggleOnClick();}
setTitle(html){this.titleRef.innerHTML=html;return this;}
setContent(html){this.view.setContent(html);return this;}
collapse(){this.ref.classList.add('collapsed');this.arrowRef.innerHTML=config.symbols.collapsed;return this;}
expand(){this.ref.classList.remove('collapsed');this.arrowRef.innerHTML=config.symbols.expanded;return this;}
toggle(){this.ref.classList.toggle('collapsed');if(this.ref.classList.contains('collapsed')){this.arrowRef.innerHTML=config.symbols.collapsed;}else{this.arrowRef.innerHTML=config.symbols.expanded;}
return this;}
append(widget){this.view.append(widget);return this;}
initToggleOnClick(threshold=10){this.headerRef.addEventListener('click',e=>{this.toggle();});}}
function openPopupMenu({title,items,closable=true,closeText='Close'}){return new Promise(resolve=>{let divWrapper=createElem('div');let divPopup=createElem('div');let divTitle=createElem('div');let divMenu=createElem('div');divWrapper.className='cgui-popup-menu-wrapper cgui-fadein';divPopup.className='cgui cgui-popup-menu';divTitle.className='cgui-popup-menu-title';divMenu.className='cgui-popup-menu-content';divPopup.appendChild(divTitle);divPopup.appendChild(divMenu);divWrapper.appendChild(divPopup);divTitle.innerHTML=title;let first=true;for(const item in items){const btn=createElem('button');btn.className='cgui-popup-menu-btn';btn.innerHTML=items[item];divMenu.appendChild(btn);if(first){first=false;setTimeout(()=>btn.focus(),0);}
btn.onclick=()=>{divWrapper.classList.add('cgui-fadeout');setTimeout(()=>{divWrapper.remove();resolve(item);},150);};}
if(closable){const btn=createElem('button');btn.className='cgui-popup-menu-btn';btn.innerHTML=closeText;divMenu.appendChild(btn);btn.onclick=()=>{divWrapper.classList.add('cgui-fadeout');setTimeout(()=>{divWrapper.remove();resolve(-1);},150);};}
document.body.appendChild(divWrapper);});}
return{GUIElement,View,Window,Element,Text,Button,Input,Switch,Tree,openPopupMenu,utils,isMobile};})();if(typeof module!=='undefined'&&typeof module.exports=='object')module.exports=cheatgui;if(typeof globalThis!=='undefined')globalThis.cheatgui=cheatgui;